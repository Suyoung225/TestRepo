#name: Build and Deploy
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up Java
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: '17'
#
#      - name: Gradle Caching
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      - name: Run chmod to make gradlew executable
#        run: chmod +x ./gradlew
#
#      - name: Execute Gradle build
#        run: ./gradlew clean build
#
#      # - name: action-slack
#      #   uses: 8398a7/action-slack@v3
#      #   with:
#      #     status: ${{ job.status }}
#      #     author_name: Github Action Test # default: 8398a7@action-slack
#      #     fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
#      #   env:
#      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#      #   if: always()
#
#      - name: Upload artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: test-$(date +"%Y%m%d%H%M")
#          path: build/libs/*.jar
#
#      - name: Download artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: test-$(date +"%Y%m%d%H%M")
#
#      - name: Setup SSH
#        uses: webfactory/ssh-agent@v0.5.4
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#
#      - name: Add remote server to known hosts
#        run: |
#          mkdir -p ~/.ssh
#          ssh-keyscan ${{ secrets.REMOTE_IP }} >> ~/.ssh/known_hosts
#
#      - name: SCP transfer
#        run: scp *.jar ${{ secrets.REMOTE_USERNAME }}@${{ secrets.REMOTE_IP }}:~/app
#
#      - name: Execute remote commands
#        run: |
#          ssh -v ${{ secrets.REMOTE_USERNAME }}@${{ secrets.REMOTE_IP }} "sudo fuser -k 8080/tcp || true"
#          ssh -v ${{ secrets.REMOTE_USERNAME }}@${{ secrets.REMOTE_IP }} "sudo nohup java -jar ~/app/*.jar  > ~/app/nohup.log 2>&1 &"
#
